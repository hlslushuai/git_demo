### 页面原型

![关系库输出](./images/mysqlOut.png)

### 交互操作

- 用户拖动目的数据源中关系数据库节点到作业画布，打开该界面进行新增节点设置。

- 用户点击画布中的目的关系数据库节点，打开该页面进行设置修改。

- 新增节点设置时，用户选择数据库类型，输入数据库名称、连接地址、端口、用户名、密码，勾选输出字段添加输出关系，点击”确定“按钮，在系统新增一个关系数据库系统节点。

- 修改设置时，用户修改输入数据库名称、连接地址、端口、用户名、密码，勾选输出字段添加输出关系，点击”确定“按钮，将更新后的节点设置信息保存到系统。

- 点击”取消“按钮，退出当前页面。

1. 添加文件系统节点

**输入**：文件类型、文件名路径。

**输出**：系统中新增一个文件对象节点。

**正常流程**：用户输入新增所需的信息，然后提交操作，在系统新增一个文件对象节点。

- 文件类型包括：CSV、JSON、XML、TXT

- 文件来源包括：本地文件、网络文件（SFTP)

  "benthos_yaml": "input: {}\npipeline: {}\noutput: {}\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_gnmqafan.json\n    rotate: true\n",
  "benthos_yaml": "input:\n  generate:\n    count: 1\n    interval: 0s\n    mapping: root = {}\n  processors:\n    - http:\n        basic_auth:\n          enabled: false\n          password: \"\"\n          username: \"\"\n        headers:\n          Content-Type: application/json\n          namespace: hsm_io_it\n        retries: 0\n        timeout: 60s\n        url: http://172.21.215.39:6130/hsm-io-it/#/layout/job-flow\n        verb: GET\npipeline:\n  processors:\n    - branch:\n        processors:\n          - label: fieldmapping_1\n            mapping: >\n              map mapping {\n\n              order_no = this.\"OrderNo\"\n\n              cmd_time = this.\"CmdTime\"\n\n              order_priority = this.\"OrderPriority\"\n\n              order_batch = this.\"OrderBatch\"\n\n              order_type = this.\"OrderType\"\n\n              mat_code = this.\"MatCode\"\n\n              order_num = this.\"OrderNum\"\n\n              unit = this.\"Unit\"\n\n              plant = this.\"Plant\"\n\n              plan_starttime = this.\"PlanStarttime\"\n\n              plan_endtime = this.\"PlanEndtime\"\n\n              process_code = this.\"ProcessCode\"\n\n              pbom_code = this.\"PbomCode\"\n\n              order_status = this.\"OrderStatus\"\n\n              is_delete = this.\"IsDelete\"\n\n              }\n\n              root = if this.catch(root).type() == \"array\" { this.catch(root).map_each(item -> item.apply(\"mapping\"))} else { this.catch(root).catch({}).apply(\"mapping\") }\n          - mapping: root =\n              {\"data\":this,\"process_map\":{\"start_process\":\"search\",\"process\":{\"search\":{\"precondition\":[],\"postcondition\":[{\"path\":\"data\",\"result\":true,\"branch\":[\"delete\",\"edit\"]},{\"path\":\"data\",\"result\":false,\"branch\":[\"add\"]}],\"send_body\":false,\"body_type\":\"\",\"interface\":\"MES_SEARCHORDER_INTERFACE\",\"arg_map\":{\"plant\":\"plant\",\"order_no\":\"order_no\"}},\"add\":{\"precondition\":[],\"postcondition\":[],\"send_body\":true,\"body_type\":\"\",\"interface\":\"MES_ADDORDER_INTERFACE\",\"arg_map\":{}},\"edit\":{\"precondition\":[],\"postcondition\":[],\"send_body\":true,\"body_type\":\"\",\"interface\":\"MES_EDITORDER_INTERFACE\",\"arg_map\":{}},\"delete\":{\"precondition\":[{\"path\":\"is_delete\",\"result\":1}],\"postcondition\":[],\"send_body\":false,\"body_type\":\"\",\"interface\":\"MES_DELETEORDER_INTERFACE\",\"arg_map\":{\"order_no\":\"order_no\",\"plant\":\"plant\"}}}}}\n          - http:\n              url: http://172.21.215.39:6120/api/hsm-io-it/sap/gateway\n              verb: POST\n              headers:\n                Content-Type: application/json\n              timeout: 60s\n              retries: 0\noutput:\n  broker:\n    outputs:\n      - label: log\n        test_stdout:\n          codec: lines\n      - http_client:\n          basic_auth:\n            enabled: false\n            password: \"\"\n            username: \"\"\n          headers:\n            Content-Type: application/json\n            namespace: hsm_io_it\n          retries: 0\n          timeout: 60s\n          url: http://172.21.215.39:6130/hsm-io-it/#/layout/job-flow\n          verb: POST\n        label: httpclient\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_kwgyb0jh.json\n    rotate: true\n",
  "benthos_yaml": "",

// 正则表达式：匹配 count 的值并替换为 1
	countRegexp := regexp.MustCompile(`(?m)count:\s*\d+`)
	benthosYaml = countRegexp.ReplaceAllString(benthosYaml, "count: 1")

	// 正则表达式：匹配 interval 的值并替换为 "0s"
	intervalRegexp := regexp.MustCompile(`(?m)interval:\s*[0-9a-zA-Z]+`)
	benthosYaml = intervalRegexp.ReplaceAllString(benthosYaml, `interval: "0s"`)

	// 输出替换后的字符串
	fmt.Println(benthosYaml)