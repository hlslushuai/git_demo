### 页面原型

![关系库输出](./images/mysqlOut.png)

### 交互操作

- 用户拖动目的数据源中关系数据库节点到作业画布，打开该界面进行新增节点设置。

- 用户点击画布中的目的关系数据库节点，打开该页面进行设置修改。

- 新增节点设置时，用户选择数据库类型，输入数据库名称、连接地址、端口、用户名、密码，勾选输出字段添加输出关系，点击”确定“按钮，在系统新增一个关系数据库系统节点。

- 修改设置时，用户修改输入数据库名称、连接地址、端口、用户名、密码，勾选输出字段添加输出关系，点击”确定“按钮，将更新后的节点设置信息保存到系统。

- 点击”取消“按钮，退出当前页面。

1. 添加文件系统节点

**输入**：文件类型、文件名路径。

**输出**：系统中新增一个文件对象节点。

**正常流程**：用户输入新增所需的信息，然后提交操作，在系统新增一个文件对象节点。

- 文件类型包括：CSV、JSON、XML、TXT

- 文件来源包括：本地文件、网络文件（SFTP)

  "benthos_yaml": "input: {}\npipeline: {}\noutput: {}\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_gnmqafan.json\n    rotate: true\n",
  "benthos_yaml": "input:\n  generate:\n    count: 1\n    interval: 0s\n    mapping: root = {}\n  processors:\n    - http:\n        basic_auth:\n          enabled: false\n          password: \"\"\n          username: \"\"\n        headers:\n          Content-Type: application/json\n          namespace: hsm_io_it\n        retries: 0\n        timeout: 60s\n        url: http://172.21.215.39:6130/hsm-io-it/#/layout/job-flow\n        verb: GET\npipeline:\n  processors:\n    - branch:\n        processors:\n          - label: fieldmapping_1\n            mapping: >\n              map mapping {\n\n              order_no = this.\"OrderNo\"\n\n              cmd_time = this.\"CmdTime\"\n\n              order_priority = this.\"OrderPriority\"\n\n              order_batch = this.\"OrderBatch\"\n\n              order_type = this.\"OrderType\"\n\n              mat_code = this.\"MatCode\"\n\n              order_num = this.\"OrderNum\"\n\n              unit = this.\"Unit\"\n\n              plant = this.\"Plant\"\n\n              plan_starttime = this.\"PlanStarttime\"\n\n              plan_endtime = this.\"PlanEndtime\"\n\n              process_code = this.\"ProcessCode\"\n\n              pbom_code = this.\"PbomCode\"\n\n              order_status = this.\"OrderStatus\"\n\n              is_delete = this.\"IsDelete\"\n\n              }\n\n              root = if this.catch(root).type() == \"array\" { this.catch(root).map_each(item -> item.apply(\"mapping\"))} else { this.catch(root).catch({}).apply(\"mapping\") }\n          - mapping: root =\n              {\"data\":this,\"process_map\":{\"start_process\":\"search\",\"process\":{\"search\":{\"precondition\":[],\"postcondition\":[{\"path\":\"data\",\"result\":true,\"branch\":[\"delete\",\"edit\"]},{\"path\":\"data\",\"result\":false,\"branch\":[\"add\"]}],\"send_body\":false,\"body_type\":\"\",\"interface\":\"MES_SEARCHORDER_INTERFACE\",\"arg_map\":{\"plant\":\"plant\",\"order_no\":\"order_no\"}},\"add\":{\"precondition\":[],\"postcondition\":[],\"send_body\":true,\"body_type\":\"\",\"interface\":\"MES_ADDORDER_INTERFACE\",\"arg_map\":{}},\"edit\":{\"precondition\":[],\"postcondition\":[],\"send_body\":true,\"body_type\":\"\",\"interface\":\"MES_EDITORDER_INTERFACE\",\"arg_map\":{}},\"delete\":{\"precondition\":[{\"path\":\"is_delete\",\"result\":1}],\"postcondition\":[],\"send_body\":false,\"body_type\":\"\",\"interface\":\"MES_DELETEORDER_INTERFACE\",\"arg_map\":{\"order_no\":\"order_no\",\"plant\":\"plant\"}}}}}\n          - http:\n              url: http://172.21.215.39:6120/api/hsm-io-it/sap/gateway\n              verb: POST\n              headers:\n                Content-Type: application/json\n              timeout: 60s\n              retries: 0\noutput:\n  broker:\n    outputs:\n      - label: log\n        test_stdout:\n          codec: lines\n      - http_client:\n          basic_auth:\n            enabled: false\n            password: \"\"\n            username: \"\"\n          headers:\n            Content-Type: application/json\n            namespace: hsm_io_it\n          retries: 0\n          timeout: 60s\n          url: http://172.21.215.39:6130/hsm-io-it/#/layout/job-flow\n          verb: POST\n        label: httpclient\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_kwgyb0jh.json\n    rotate: true\n",
  "benthos_yaml": "",

// 正则表达式：匹配 count 的值并替换为 1
	countRegexp := regexp.MustCompile(`(?m)count:\s*\d+`)
	benthosYaml = countRegexp.ReplaceAllString(benthosYaml, "count: 1")

	// 正则表达式：匹配 interval 的值并替换为 "0s"
	intervalRegexp := regexp.MustCompile(`(?m)interval:\s*[0-9a-zA-Z]+`)
	benthosYaml = intervalRegexp.ReplaceAllString(benthosYaml, `interval: "0s"`)

	// 输出替换后的字符串
	fmt.Println(benthosYaml)

  "benthos_yaml": "input:\n  label: interval\n  generate:\n    interval: 14 54 15 * 7,5 *\n    mapping: root = {}\npipeline:\n  processors:\n    - branch:\n        processors:\n          - sql_raw:\n              args_mapping: \"[0]\"\n              driver: postgres\n              dsn: postgres://postgres:123456@172.21.222.10:5432/postgres?sslmode=disable\n              query: SELECT id,job_name FROM public.zhaopan where 1 = $1 or id in('1')\n        result_map: root.database = this\noutput:\n  broker:\n    outputs:\n      - label: log\n        test_stdout:\n          codec: lines\n      - http_client:\n          basic_auth:\n            enabled: false\n            password: \"\"\n            username: \"\"\n          headers:\n            Content-Type: application/json\n            namespace: hsm_io_it\n          retries: 0\n          timeout: 60s\n          url: http://172.21.215.39:6130/hsm-io-it/#/layout/job-flow\n          verb: POST\n        label: httpclient\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_qpqaa2ja.json\n    rotate: true\n",

  countRegexp := regexp.MustCompile(`(?m)(generate:\s*\n\s*interval:.*)(\n\s*mapping:)`)
	benthosYaml = countRegexp.ReplaceAllString(benthosYaml, `$1\n    count: 0$2`)

  intervalRegexp := regexp.MustCompile(`(?m)(interval:\s*)([^ \n]+(?: [^ \n]+)*)`)
	benthosYaml = intervalRegexp.ReplaceAllString(benthosYaml, `$1"0s"`)


CREATE TABLE "ioit"."job_info" (
  "namespace" varchar(255) COLLATE "pg_catalog"."default",
  "s_node" varchar(255) COLLATE "pg_catalog"."default",
  "code" varchar(255) COLLATE "pg_catalog"."default",
  "name" varchar(255) COLLATE "pg_catalog"."default",
  "describe" varchar(255) COLLATE "pg_catalog"."default",
  "schedule" varchar(255) COLLATE "pg_catalog"."default",
  "schedule_details" varchar(255) COLLATE "pg_catalog"."default",
  "schedule_cycle" varchar(255) COLLATE "pg_catalog"."default",
  "schedule_unit" varchar(255) COLLATE "pg_catalog"."default",
  "content" jsonb,
  "cron_id" varchar(255) COLLATE "pg_catalog"."default",
  "is_http" bool,
  "canvas" jsonb,
  "job_type" varchar(255) COLLATE "pg_catalog"."default",
  "job_class" varchar(255) COLLATE "pg_catalog"."default",
  "template" varchar(255) COLLATE "pg_catalog"."default",
  "id" varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
  "status" int8,
  "create_time" varchar(255) COLLATE "pg_catalog"."default",
  "edite_time" varchar(255) COLLATE "pg_catalog"."default",
  "create_user" varchar(255) COLLATE "pg_catalog"."default",
  "is_auto_select_id" bool,
  "cron_detail" jsonb,
  "period_detail" jsonb
)
;

{"url": "${ip:hollycon-scheduler-back-end}:18082/eam/deviceFileInfoScheduler/sparePartsReplaceReminder", "status": "1", "jobname": "备件更换提醒", "jobtype": "http", "timeout": 3000, "authtype": "none", "describe": "备件更换提醒", "executor": "默认执行器", "jobclass": "备件更换类", "returnkey": "data", "createuser": "ganguoqiang", "integrated": "KangYuan", "retrycount": 1, "isautostart": true, "requesttype": "GET", "returnvalue": "true", "scheduletype": "cron", "retryinterval": 3000, "cronexpression": "0 10 14 * * ?"}


{"benthos_yaml": "input:\n  label: interval\n  generate:\n    interval: 0s\n    count: 1\n    mapping: root = {}\npipeline:\n  processors:\n    - branch:\n        processors:\n          - sql_raw:\n              driver: postgres\n              dsn: postgres://postgres:123456@172.21.222.10:5432/postgres?sslmode=disable\n              query: SELECT\n                id,jobname,createuser,executor,describe,jobclass,url,jobtype,status,scheduletype,cronexpression,jobparams,requesttype,responsecode,responsetype,returnkey,returnvalue,createtime,editetime,integrated,isautostart,every,each,token,authorization,authtype,lastinstanceid,timeout,retrycount,retryinterval\n                FROM hsm_scheduling.tasks where 1 = $1 or id\n                in('1725585403205298931')\n              args_mapping: \"[0]\"\n        result_map: root.database = this\noutput:\n  broker:\n    outputs:\n      - label: log\n        test_stdout:\n          codec: lines\n      - label: httpclient\n        http_client:\n          url: http://172.21.215.39:6130/#/layout/job-flow\n          verb: POST\n          headers:\n            Content-Type: application/json\n            namespace: hsm_io_it\n          basic_auth:\n            enabled: false\n            username: \"\"\n            password: \"\"\n          timeout: 60s\n          retries: 0\nlogger:\n  level: ALL\n  format: json\n  add_timestamp: true\n  file:\n    path: /usr/local/hsm-os/data/hsm-io-it/data/benthos/json/job_an5twh9e.json\n    rotate: true\n", "canvas_param": [], "node_data_map": {"database": [{"id": "1725585403205298931", "url": "/api/hsm-io-it/job/excute", "each": "{\"time\": \"\", \"type\": \"\", \"dayOfWeek\": \"\", \"dayOfMonth\": \"\", \"effectiveDate\": \"\"}", "every": 0, "token": "", "status": "1", "jobname": "cw32", "jobtype": "http", "timeout": 60000, "authtype": "none", "describe": "", "executor": "默认执行器", "jobclass": "cate_rootroot", "editetime": "2024-09-06T09:16:43+08:00", "jobparams": "", "returnkey": "data", "createtime": "2024-09-06T09:16:43+08:00", "createuser": "admin", "integrated": "IOIT@hsm_io_it@job_scqavpi26", "retrycount": 1, "isautostart": false, "requesttype": "POST", "returnvalue": "true", "responsecode": "0", "responsetype": "json", "scheduletype": "period", "authorization": "", "retryinterval": 3000, "cronexpression": "@every 60s", "lastinstanceid": ""}]}, "node_yaml_map": {"input": {"77N6k53a5TbPkVHi0QOpO": {"branch": {"processors": [{"sql_raw": {"dsn": "postgres://postgres:123456@172.21.222.10:5432/postgres?sslmode=disable", "query": "SELECT id,jobname,createuser,executor,describe,jobclass,url,jobtype,status,scheduletype,cronexpression,jobparams,requesttype,responsecode,responsetype,returnkey,returnvalue,createtime,editetime,integrated,isautostart,every,each,token,authorization,authtype,lastinstanceid,timeout,retrycount,retryinterval FROM hsm_scheduling.tasks where 1 = $1 or id in('1725585403205298931')", "driver": "postgres", "args_mapping": "[0]"}}], "result_map": "root.database = this"}}}, "output": {"NWlfsyerGJzJnukeHB40k": {"broker": {"outputs": [{"label": "log", "test_stdout": {"codec": "lines"}}, {"label": "httpclient", "http_client": {"url": "http://172.21.215.39:6130/#/layout/job-flow", "verb": "POST", "headers": {"namespace": "hsm_io_it", "Content-Type": "application/json"}, "retries": 0, "timeout": "60s", "basic_auth": {"enabled": false, "password": "", "username": ""}}}]}}}, "transform": {}}, "benthos_componnet": null}